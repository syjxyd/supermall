学习到 10/05

1、函数调用的回收机制
函数调用时，把所有的变量都压入函数栈（保存函数调用过程中的所有变量），
函数调用结束，弹出函数栈（释放函数中的所有变量）

2、垃圾回收机制
变量要到最后引用消失才会被回收

3、mint-ui/view等库

知识回顾：
1.1 Promise
  将异步操作放入到promise里
1.2Vuex
  状态管理
  基本使用
  state-> 直接修改state状态 （错误）
  mutations -> devtools
1.3核心概念
state ->  单一状态树
getters -> 传参数
mutations -> 
actions ->  异步操作（Promise）
mmodules -> 

1.4 目录组织方式

三：网络请求封装
3.1 网络请求方式的选择
3.2 axios的基本使用
3.3 axios的相关配置
3.4 axios的创建实例
3.5 axios的封装

四：项目开发
4.1、划分目录结构
4.2、 引入两个css文件
4.3、 vue.config.js和.editorconfig
4.4、项目的模块划分：tabbar -> 路由映射关系
4.5、首页开发
  4.5.1 navbar的封装
  4.5.2 网络数据的请求
  4.5.3 轮播图
  4.5.4 推荐信息


  数据保存模型：
  goods（保存三类数据）:（流行/新款/精选）
  goods:{
    'pop':{
          page:1,
          list:[]
    },
    'news':{

    },
    'sell':{

    }
  }
